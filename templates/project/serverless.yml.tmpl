service: {{.ProjectName}}

provider:
  name: aws
  runtime: go1.x
  region: "{{.Region}}"
  stage: ${opt:stage, 'dev'}
  environment:
    {{- range $i, $r := .Resources }}
      {{ $r.Ident.ToUpper }}_TABLE_NAME: {{ $r.Ident.Pluralize }}-${opt:stage, self:provider.stage}
    {{- end }}
    {{- range $k, $v := .Environments }}
      {{ $k }}: ${file(./.env):{{ $k }}}
    {{- end }}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:*:*:*"

package:
 exclude:
   - ./**
 include:
   - ./bin/**

{{ if .Functions -}}
functions:
  {{ range $r, $func := .Functions }}{{ range $f := $func -}}
  {{ $f.Name }}:
    handler: bin{{ if $r }}/{{$r}}{{ end }}/{{$f.Handler}}
    events:
      - http:
          path: {{$f.Path}}
          method: {{$f.Method}}
  {{ end }}{{- end }}
{{- end }}
{{ if .Resources -}}
resources:
  Resources:
    {{ range $r := .Resources -}}
    {{$r.Ident.Pascalize}}DynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: '{{$r.Ident.Pluralize}}-${opt:stage, self:provider.stage}'
    {{ end }}
{{- end }}